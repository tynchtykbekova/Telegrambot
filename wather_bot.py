# import telebot
# from config import API, TOKEN
# from telebot import types
# from random import *
# import requests


# bot = telebot.TeleBot(TOKEN)
# markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
# markup.row('–ò—Å–∫–∞—Ç—å –≥–æ—Ä–æ–¥', '–ò–Ω—Ñ–æ', '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ', '–ö–∞–∫ –¥–µ–ª–∞?')


# @bot.message_handler(commands=['start'])
# def welcome(message):
#     sticker = open('images/sticker.webp', 'rb')
#     bot.send_sticker(message.chat.id, sticker)
    
#     bot.send_message(message.chat.id, 
#                     '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {0.first_name}! \n –Ø'
#                     '<b>{1.first_name}</b> –í–∞—à –±–æ—Ç'.format(
#                         message.from_user, bot.get_me()),
#                         parse_mode = 'html', reply_markup=markup
#     )

# @bot.message_handler(commands=['–ò—Å–∫–∞—Ç—å –≥–æ—Ä–æ–¥'])
# def welocome(message):
#     msg = f"<b>City:</b>"
#     bot.send_message(message.chat.id, msg, parse_mode='html')


# @bot.message_handler(commands=['geo'])
# def geo(message):
#     keyboard = types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
#     button_geo = types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é', 
#                                             request_location=True)
#     keyboard.add(button_geo)
#     bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç! –ù–∞–∂–º–∏ —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é.',
#                                     reply_markup=keyboard)



# @bot.message_handler(content_types=['location'])
# def location(message):
#     if message.location is not None:
#         print(message.location)
#         print("–®–∏—Ä–æ—Ç–∞: %s, –î–æ–ª–≥–æ—Ç–∞: %s" % (message.location.latitude,
#                                             message.location.longitude))


# @bot.message_handler(content_types=['text'])
# def main(message):
#     if message.chat.type == 'private':
#         if message.text == '–ò—Å–∫–∞—Ç—å –≥–æ—Ä–æ–¥':
#             msg = f"<b>–ù–∞–∑–æ–≤–∏—Ç–µ –≥–æ—Ä–æ–¥: </b>"
#             bot.send_message(message.chat.id, msg, parse_mode='html')
#         elif message.text == '–ò–Ω—Ñ–æ':
#             msg = '–ë–æ—Ç —Å–ª—É–∂–∏—Ç –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. –°–æ–∑–¥–∞—Ç–µ–ª—å: –ë–µ–∫–Ω–∞–∑–∞—Ä'
#             bot.send_message(message.chat.id, msg)
#         elif message.text == '–†–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ':
#             bot.send_message(message.chat.id, str(randint(0, 10000)))
#         elif message.text == '–ö–∞–∫ –¥–µ–ª–∞?':
#             markup = types.InlineKeyboardMarkup(row_width=3)
#             item1 = types.InlineKeyboardButton('–ù–µ –∂–∞–ª—É—é—Å—å',callback_data='not bad')
#             item2 = types.InlineKeyboardButton('–ü—Ä–æ—Å—Ç–æ –∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ :)', 
#                                                 callback_data='good')
#             item3 = types.InlineKeyboardButton('–•–æ—á—É –∑–∞–∫—Ä—ã—Ç—å –≥–ª–∞–∑–∞ –∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—Ç—å :(', 
#                                                 callback_data='bad')

#             markup.add(item1, item2, item3)
#             bot.send_message(message.chat.id, '–ü—Ä–æ—Å—Ç–æ –æ—Ñ–∏–≥–µ–Ω–Ω–æ! :)', 
#                             reply_markup=markup)


#         else:
#             try:
#                 CITY=message.text
                
#                 URL = f'https://api.openweathermap.org/data/2.5/weather?q={CITY}&units=metric&appid={API}'
#                 response=rewuests.get(url=URL).json()
#                 city_info={
#                     'city':CITY,
#                     'temp':response['main']['temp'],
#                     'humadity':response['main']['humadity'],
#                     'weather':response['wearther'][0]['desscription'],
#                     'pressure':response['main']['pressure'],
#                 }
#                 msg = f"<b><u>{CITY.upper()}</u>\n\n–ü–æ–≥–æ–¥–∞ {city_info['weather']}</b>--------------------------------\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{city_info['temp']} C</b>\nüí® –í–µ—Ç—Ä–µ–Ω–Ω–æ—Å—Ç—å: <b>{city_info['wind']} –º/—Å</b> \nüí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: <b>{city_info['humadity']}%</b>\nüß¨–î–∞–≤–ª–µ–Ω–∏–µ: <b>{city_info['pressure']} hPa</b>"
#             except:
#                 sg1=f'<b>–ú—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Å–º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏'
#                 bot.send_message(message.chat.id,msg1,parse_mode='html')



# bot.polling(none_stop=True)
import telebot
from yaml import parse
from config import API, TOKEN
from telebot import types
from random import *
import requests


bot = telebot.TeleBot(TOKEN)
markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
markup.row('–†–µ–¥–º–∏', '–ê–π—Ñ–æ–Ω', '–°–∞–º—Å—É–Ω–≥', '–ò–Ω—Ñ–æ')


@bot.message_handler(commands=['start'])
def welcome(message):
    sticker = open('images/sticker.webp', 'rb')
    bot.send_sticker(message.chat.id, sticker)
    
    bot.send_message(message.chat.id, 
                    '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å {0.first_name}! \n –Ø'
                    '<b>{1.first_name}</b> –í–∞—à –±–æ—Ç.–ö–∞–∫–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω —Ö–æ—Ç–∏—Ç–µ?'.format(
                        message.from_user, bot.get_me()),
                        parse_mode = 'html', reply_markup=markup
    )



@bot.message_handler(content_types=['location'])
def location(message):
    if message.location is not None:
        print(message.location)
        print("–®–∏—Ä–æ—Ç–∞: %s, –î–æ–ª–≥–æ—Ç–∞: %s" % (message.location.latitude,
                                            message.location.longitude))


@bot.message_handler(content_types=['text'])
def main(message):
    if message.chat.type == 'private':
        if message.text == message.text == '–ê–π—Ñ–æ–Ω':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton('IPhone SE',callback_data='item4')
            item2 = types.InlineKeyboardButton('IPhone 13 Pro Max', 
                                                callback_data='item5')
            item3 = types.InlineKeyboardButton('IPhone 12 Pro', 
                                                callback_data='item6')

            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–£ –Ω–∞—Å –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏.–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!', 
                            reply_markup=markup)
        elif message.text == '–†–µ–¥–º–∏':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton('Mi 6',callback_data='not bad')
            item2 = types.InlineKeyboardButton('Mi 8', 
                                                callback_data='good')
            item3 = types.InlineKeyboardButton('Mi 6x', 
                                                callback_data='bad')

            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–£ –Ω–∞—Å –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏.–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!', 
                            reply_markup=markup)
        elif message.text == '–ò–Ω—Ñ–æ':
            msg = '–ë–æ—Ç —Å–ª—É–∂–∏—Ç –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–º–∞—Ä—Ç—Ñ–æ–Ω–∞.'
            bot.send_message(message.chat.id, msg)

        elif message.text == '–°–∞–º—Å—É–Ω–≥':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton('Galaxy S22',callback_data='item7')
            item2 = types.InlineKeyboardButton('Galaxy S22 ulra', 
                                                callback_data='item8')
            item3 = types.InlineKeyboardButton('Galax A53', 
                                                callback_data='item9')

            markup.add(item1, item2, item3)
            bot.send_message(message.chat.id, '–£ –Ω–∞—Å –≤ –Ω–∞–ª–∏—á–∏–∏ –µ—Å—Ç—å –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏.–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!', 
                            reply_markup=markup)

        else:
            try:
                CITY = message.text
                URL = f'https://api.openweathermap.org/data/2.5/weather?q={CITY}&units=metric&appid={API}'
                response = requests.get(url=URL).json()
                city_info = {
                    'city': CITY,
                    'temp': response['main']['temp'],
                    'humidity': response['main']['humidity'],
                    'weather': response['weather'][0]['description'],
                    'wind': response['wind']['speed'],
                    'pressure': response['main']['pressure'],
                }
                msg = f"<b><u>{CITY.upper()}</u>\n\nWeather is{city_info['weather']}</b>\n------------------------------------\nüå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: <b>{city_info['temp']} C</b>\nüí® –í–µ—Ç—Ä–µ–Ω–Ω–æ—Å—Ç—å: <b>{city_info['wind']} m/s</b>\nüí¶ –í–ª–∞–∂–Ω–æ—Å—Ç—å: <b>{city_info['humidity']} %</b>\nüß¨ –î–∞–≤–ª–µ–Ω–∏–µ: <b>{city_info['pressure']} hPa</b>"
                bot.send_message(message.chat.id, msg, parse_mode='html')
            except:
                msg1 = f"<b>üôÖ‚Äç‚ôÇÔ∏è Nothing found try again</b>"
                bot.send_message(message.chat.id, msg1, parse_mode='html')

@bot.callback_query_handler(func=lambda call:True)
def callback_inline(call):
    try:
        if call.message:
            if call.data =='good':
                bot.send_message(call.message.chat.id,'''–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ Xiaomi Mi 8

    SoC Qualcomm Snapdragon 845, 8 —è–¥–µ—Ä (4 √ó Kryo 385 @2,8 –ì–ì—Ü + 4 √ó Kryo 385 @1,8 –ì–ì—Ü)
    GPU Adreno 630.
    –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ Android 8.1, MIUI 10.
    –°–µ–Ω—Å–æ—Ä–Ω—ã–π –¥–∏—Å–ø–ª–µ–π AMOLED 6,21‚Ä≥, 2248√ó1080 (18,7:9), 402 ppi.
    –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM) 6 –ì–ë, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å 64/128/256 –ì–ë''')
            elif call.data=='bad':
                bot.send_message(call.message.chat.id,'''–ö–∞–∫–æ–≤—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ Xiaomi Mi 6x?

    –≠–∫—Ä–∞–Ω: 5.99" LCD IPS.
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1080 x 2160 px ¬∑ FHD+
    RAM: 4GB - 6GB.
    –•—Ä–∞–Ω–µ–Ω–∏–µ: 64GB - 128GB.
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: Qualcomm Snapdragon 660 MSM8976 Plus.''')
            elif call.data=='not bad':
                bot.send_message(call.message.chat.id,'''–ü–æ–ª–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ Xiaomi Mi 6

    –î–∏—Å–ø–ª–µ–π: 5.15 –¥—é–π–º–æ–≤, Full HD, 600 –ù–∏—Ç
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: Qualcomm Snapdragon 835, 8 —è–¥–µ—Ä, 2.45 –ì–ì—Ü
    –ì—Ä–∞—Ñ–∏–∫–∞: Adreno 540 GPU.
    –û–ó–£: 6 –ì–± LPDDR4.
    –§–ª–µ—à-–ø–∞–º—è—Ç—å: 64/128 –ì–± UFS.
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞: –¥–≤–∞ —Å–µ–Ω—Å–æ—Ä–∞ –ø–æ 12 –ú–ø, OIS, 2-–∫—Ä–∞—Ç–Ω—ã–π –æ–ø—Ç–∏—á–µ—Å–∫–∏–π –∑—É–º
    –§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞: 8 –ú–ø''')
  

    
        
            elif call.data =='item1':
                bot.send_message(call.message.chat.id,'''–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ nokia Mi 8

    SoC Qualcomm Snapdragon 845, 8 —è–¥–µ—Ä (4 √ó Kryo 385 @2,8 –ì–ì—Ü + 4 √ó Kryo 385 @1,8 –ì–ì—Ü)
    GPU Adreno 630.
    –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ Android 8.1, MIUI 10.
    –°–µ–Ω—Å–æ—Ä–Ω—ã–π –¥–∏—Å–ø–ª–µ–π AMOLED 6,21‚Ä≥, 2248√ó1080 (18,7:9), 402 ppi.
    –û–ø–µ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–∞–º—è—Ç—å (RAM) 6 –ì–ë, –≤–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –ø–∞–º—è—Ç—å 64/128/256 –ì–ë''')
            elif call.data=='item2':
                bot.send_message(call.message.chat.id,'''–ö–∞–∫–æ–≤—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ Xiaomi Mi 6x?

    –≠–∫—Ä–∞–Ω: 5.99" LCD IPS.
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1080 x 2160 px ¬∑ FHD+
    RAM: 4GB - 6GB.
    –•—Ä–∞–Ω–µ–Ω–∏–µ: 64GB - 128GB.
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞: Qualcomm Snapdragon 660 MSM8976 Plus.''')
            elif call.data=='item3':
                bot.send_message(call.message.chat.id,'''–ü–æ–ª–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ Xiaomi Mi 6

    –î–∏—Å–ø–ª–µ–π: 5.15 –¥—é–π–º–æ–≤, Full HD, 600 –ù–∏—Ç
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: Qualcomm Snapdragon 835, 8 —è–¥–µ—Ä, 2.45 –ì–ì—Ü
    –ì—Ä–∞—Ñ–∏–∫–∞: Adreno 540 GPU.
    –û–ó–£: 6 –ì–± LPDDR4.
    –§–ª–µ—à-–ø–∞–º—è—Ç—å: 64/128 –ì–± UFS.
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞: –¥–≤–∞ —Å–µ–Ω—Å–æ—Ä–∞ –ø–æ 12 –ú–ø, OIS, 2-–∫—Ä–∞—Ç–Ω—ã–π –æ–ø—Ç–∏—á–µ—Å–∫–∏–π –∑—É–º
    –§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞: 8 –ú–ø''')
            elif call.data =='item4':
                bot.send_message(call.message.chat.id,'''–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ iPhone SE 3
    –î–∏—Å–ø–ª–µ–π: 4.7 –¥—é–π–º–æ–≤, IPS LCD;
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: Apple A15 Bionic;
    –ü–∞–º—è—Ç—å: 64 –ì–ë / 128 –ì–ë / 256 –ì–ë;
    –û–ó–£: 3 –ì–ë;
    –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: iOS 15.4;
    –ü–æ—Ä—Ç: Lightning;
    –§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞: 7 –ú–ø;
    –û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞: 12 –ú–ø + –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∫–∏–Ω–æ—Å—Ç–∏–ª–µ–π –∏ HDR 4;''')
            elif call.data=='item5':
                bot.send_message(call.message.chat.id,'''–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ iPhone 13 Pro Max:

    –ì–∞–±–∞—Ä–∏—Ç—ã: 160,8√ó78,1√ó7,65 –º–º, 238 –≥
    –î–∏—Å–ø–ª–µ–π: 6,7", OLED, Super Retina XDR, 2778√ó1284 , 458 ppi, 120 –ì—Ü
    –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä: 6-—è–¥–µ—Ä–Ω—ã–π Apple A15 Bionic.
    –ü–∞–º—è—Ç—å: 6 –ì–ë –û–ó–£, 128/256/512 –ì–ë –∏–ª–∏ 1 –¢–ë –ü–ó–£''')
            elif call.data=='item6':
                bot.send_message(call.message.chat.id,'''–¢–∏–ø   OLED
    –†–∞–∑–º–µ—Ä   6.7 –¥—é–π–º–æ–≤
    –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ   1284 x 2778 –ø–∏–∫—Å–µ–ª–µ–π
    –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω   19.5:9
    –ü–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–∏–∫—Å–µ–ª–µ–π   458 —Ç–æ—á–µ–∫ –Ω–∞ –¥—é–π–º
    –ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è   60 –ì—Ü
    –ü–æ–¥–¥–µ—Ä–∂–∫–∞ HDR   –î–∞, Dolby Vision
    –ó–∞—â–∏—Ç–∞ –¥–∏—Å–ø–ª–µ—è   Ceramic Shield
    –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —ç–∫—Ä–∞–Ω–∞ –∫ –∫–æ—Ä–ø—É—Å—É   87.4%
    –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏   - DCI-P3;''')
            elif call.data =='item7':
                bot.send_message(call.message.chat.id,'''Samsung Galaxy S22 5G —Å–º–∞—Ä—Ç—Ñ–æ–Ω 2022 –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞. –ï–≥–æ —Ä–∞–∑–º–µ—Ä—ã 146 x 70.6 x 7.6 –∏ –≤–µ—Å 167 –≥. –û–Ω –æ—Å–Ω–∞—â–µ–Ω Dynamic AMOLED 2X-–¥–∏—Å–ø–ª–µ–µ–º —Å —Ä–∞–∑–º–µ—Ä–æ–º 6.1" –¥—é–π–º–∞. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1080 x 2340 –ø–∏–∫—Å–µ–ª–µ–π, –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–∏–∫—Å–µ–ª–µ–π 425 ppi. –î–ª—è —Å–µ–ª—Ñ–∏ –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–æ–≤ –æ—Ç–≤–µ—á–∞–µ—Ç –û–¥–Ω–∞ –ø—Ä–µ–¥–Ω–∞ –∫–∞–º–µ—Ä–∞ —Å 10 MP. –î–ª—è –±–∞–∑–æ–≤—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–∞—è –¢—Ä–æ–π–Ω–∞—è –∑–∞–¥–Ω—è—è –∫–∞–º–µ—Ä–∞ 50 MP. –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –µ—Å—Ç—å Octa-core (1x2.8 GHz Cortex-X2 & 3x2.50 GHz Cortex-A710 & 4x1.7 GHz Cortex-A510) - International Octa-core (1x3.00 GHz Cortex-X2 & 3x2.50 GHz Cortex-A710 & 4x1.80 GHz Cortex-A510) - USA/China –∏ –ø–∞–º—è—Ç–∏ 128GB 8GB RAM, 256GB 8GB RAM. –ï–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ 3700 mAh. –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ —á–∏—Ç–∞–π—Ç–µ –Ω–∏–∂–µ..''')
            elif call.data=='item8':
                bot.send_message(call.message.chat.id,'''Samsung Galaxy S22 Ultra 5G —Å–º–∞—Ä—Ç—Ñ–æ–Ω 2022 –≥–æ–¥–∞ –≤—ã–ø—É—Å–∫–∞. –ï–≥–æ —Ä–∞–∑–º–µ—Ä—ã 163.3 x 77.9 x 8.9 –∏ –≤–µ—Å 228 –≥. –û–Ω –æ—Å–Ω–∞—â–µ–Ω Dynamic AMOLED 2X-–¥–∏—Å–ø–ª–µ–µ–º —Å —Ä–∞–∑–º–µ—Ä–æ–º 6.8" –¥—é–π–º–∞. –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 1440 x 3088 –ø–∏–∫—Å–µ–ª–µ–π, –ø–ª–æ—Ç–Ω–æ—Å—Ç—å –ø–∏–∫—Å–µ–ª–µ–π 500 ppi.''')
            elif call.data=='item9':
                bot.send_message(call.message.chat.id,'''–î–ª—è —Å–µ–ª—Ñ–∏ –∏ –≤–∏–¥–µ–æ–∑–≤–æ–Ω–∫–æ–≤ –æ—Ç–≤–µ—á–∞–µ—Ç –û–¥–Ω–∞ –ø—Ä–µ–¥–Ω–∞ –∫–∞–º–µ—Ä–∞ —Å 32 MP. –î–ª—è –±–∞–∑–æ–≤—ã—Ö —Ñ–æ—Ç–æ –∏ –≤–∏–¥–µ–æ –¥–æ—Å—Ç—É–ø–Ω–∞—è –ß–µ—Ç–≤–µ—Ä–Ω–∞—è –∑–∞–¥–Ω—è—è –∫–∞–º–µ—Ä–∞ 64 MP. –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä –µ—Å—Ç—å Octa-core (2x2.4 GHz Cortex-A78 & 6x2.0 GHz Cortex-A55) –∏ –ø–∞–º—è—Ç–∏ 128GB 4GB RAM, 128GB 6GB RAM, 128GB 8GB RAM, 256GB 6GB RAM, 256GB 8GB RAM. –ï–º–∫–æ—Å—Ç—å –∞–∫–∫—É–º—É–ª—è—Ç–æ—Ä–∞ 5000 mAh.''')
    except Exception as e:
        print(repr(e))
    

bot.polling(none_stop=True)



































































































